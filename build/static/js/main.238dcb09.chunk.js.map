{"version":3,"sources":["components/Home.js","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/Navigation.js","components/add_ingredient.js","components/ingredients_list.js","components/recipes_list.js","components/add_recipe.js","components/Login.js","components/Register.js","components/Recipe.js","components/sum_ingredients.js","Router.js","components/layout/alert.js","reducers/alert.js","reducers/auth.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Home","state","data","React","Component","setAlert","msg","alertType","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","connect","auth","logout","isAuthenticated","loading","authLinks","class","href","onClick","guestLinks","AddIngredient","ingredient","amount","handleChangeIngredient","event","setState","target","value","console","log","handleChangeAmount","handleChangeType","handleSubmit","preventDefault","post","style","margin","onSubmit","this","name","onChange","IngredientsList","then","ings","Object","values","romp","ings2","filter","e","_id","Ingredient","map","ins","Amount","Type","floz","cup","tbs","tsp","ml","L","RecipesList","props","match","Card","CardHeader","title","Title","CardContent","to","Button","textDecoration","variant","AddRecipe","ingredients","amounts","types","directions","second","handleChangeTitle","handleChangeIngredients","handleChangeAmounts","handleChangeDirections","handleAddIngredient","ar","obs","login","email","password","config","body","JSON","stringify","errors","response","forEach","error","useState","formData","setFormData","placeholder","minLength","register","password2","Recipe","handleUseRecipe","strIngredients","Ingredients","i","arIngredients","split","arAmounts","Amounts","arTypes","Types","negAmounts","j","ing_add","length","push","dat","alert","params","Directions","SumIngredients","hi","result","fin","reduce","oz","lb","g","n","vol","weight","data2","ing","Router","exact","path","component","Login","Register","Alert","alerts","key","PropTypes","array","isRequired","initialState","getItem","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","useEffect","className","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.238dcb09.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\n\nclass Home extends React.Component {\n\n    state = {\n        data: []\n    }\n\n    // componentDidMount(){\n    //     axios.get('http://localhost:4000/')\n    //     .then(res => {\n    //   this.setState({\n    //     data: res.data\n    //   } )\n    //   console.log(this.state);\n    //       })\n      \n    //     }\n        \n    render() {\n        return (\n            <div>\n                <p>Hello. Welcome to my App!</p>\n                \n                \n                \n\n            </div>\n\n        )\n\n    }\n}\n\nexport default Home;","import { SET_ALERT, REMOVE_ALERT } from './types';\nimport { v4 as uuidv4 } from 'uuid';\nexport const setAlert = (msg, alertType) => dispatch => {\n    const id = uuidv4();\n    dispatch({\n        type: SET_ALERT,\n        payload: { msg, alertType, id }\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 5000);\n}","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const ADD_RECIPE = 'ADD_RECIPE';","import axios from 'axios';\n\nconst setAuthToken = (token) => {\n    if(token){\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    LOGOUT\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load User\n\nexport const loadUser = () => async dispatch => {\n   if(localStorage.token) {\n       setAuthToken(localStorage.token)\n   }\n\n   try {\n       const res = await axios.get('https://immense-basin-13550.herokuapp.com/user');\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        })\n   } catch(err){\n    dispatch({\n        type: AUTH_ERROR\n    })\n   }\n}\n\n// Register a user\n\nexport const register = ({\n    name,\n    email,\n    password\n}) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ name, email, password });\n\n    try {\n        const res = await axios.post('https://immense-basin-13550.herokuapp.com/register', body, config);\n   \n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n        console.log(errors)\n\n        if(errors){\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n        dispatch({\n            type: REGISTER_FAIL\n        })\n    }\n}\n\n// Login User\n\nexport const login = ( email,\n    password\n) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post('https://immense-basin-13550.herokuapp.com//login', body, config);\n   \n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        })\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if(errors){\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n}\n\n// Logout / Clear Profile\n\nexport const logout = () => dispatch => {\n    dispatch({ type: LOGOUT })\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom';\nimport Router from '../Router';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../actions/auth';\n\n// import LoggedIn from './LoggedIn';\n// Import { Link } here //\n\nconst Navigation = ({ auth: { isAuthenticated, loading }, logout }) => {\n\n\n\n\n        \n    const authLinks = (<Fragment>\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/sum\">Ingredients List</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/recipes_list\">Recipes List</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/add_recipe\">Add Recipe</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/add_ingredients\">Add Ingredients</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" onClick={logout}>Logout</a>\n      </li>\n    </ul></div> </nav>  </Fragment>)\n\n        {/* // <Fragment>\n        //     <ButtonGroup>\n        //         <MenuItem>\n        //     <Link to=\"/sum\" style= {{ textDecoration: 'none' }}><Button color=\"white\">Ingredients List</Button></Link>\n        //         </MenuItem>\n        //         <MenuItem>\n        //     <Link to=\"/recipes_list\" style= {{ textDecoration: 'none' }}><Button color=\"white\">Recipes List</Button></Link>\n        //         </MenuItem>\n        //         </ButtonGroup>\n        //         <MenuItem>\n        //     <Link to=\"/add_recipe\" style= {{ textDecoration: 'none' }}><Button color=\"white\">Add Recipe</Button></Link>\n        //         </MenuItem>\n        //         <MenuItem>\n        //     <Link to=\"/add_ingredients\" style= {{ textDecoration: 'none' }}><Button color=\"white\">Add Ingredients</Button></Link>\n        //         </MenuItem>\n        //         <MenuItem>\n        //     <a onClick={logout} href='#!'>\n        //         <span className=\"hide-sm\" style= {{ textDecoration: 'none' }}><Button color=\"white\">Logout</Button></span></a>\n        //         </MenuItem>\n        //         </Fragment> */}\n\n        const guestLinks = (<Fragment>\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/login\">Login</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/register\">Register</a>\n      </li>\n    </ul></div>\n        </nav>\n        </Fragment>\n        )\n\n        return (\n            \n                       !loading && (<Fragment>\n\n                           {isAuthenticated ? authLinks : guestLinks}\n                           </Fragment>)\n            \n        )\n    \n        \n                       }\n\n// Navigation.propTypes = {\n//     logout: PropTypes.func.isRequired,\n//     auth: PropTypes.func.isRequired\n// }\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n\n})\n\nexport default connect(mapStateToProps, {logout})(Navigation);","import React from 'react';\nimport { FormControl } from '@material-ui/core';\nimport { InputLabel } from '@material-ui/core';\nimport { Input } from '@material-ui/core';\nimport { FormHelperText } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\n\nclass AddIngredient extends React.Component {\n\n    state = {\n        ingredient: '',\n        type: '',\n        amount: ''\n    }\n\n    handleChangeIngredient = (event) => {\n        this.setState({\n            ingredient: event.target.value\n        })\n        console.log(this.state.ingredient)\n    }\n\n    handleChangeAmount = (event) => {\n        this.setState({\n            amount: event.target.value\n        })\n        console.log(this.state.amount)\n    }\n\n    handleChangeType = (event) => {\n        this.setState({\n            type: event.target.value\n        })\n        console.log(this.state.type)\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        let ingredient = {\n            ingredient: this.state.ingredient,\n            type: this.state.type,\n            amount: this.state.amount\n        }\n\n        axios.post('https://immense-basin-13550.herokuapp.com/add_ingredient', ingredient)\n        this.setState({\n            ingredient: '',\n            type: '',\n            amount: ''\n        })\n\n    }\n\n    render() {\n        return (\n            <div style={{margin: '90px' }}>\n                            <form\n                            // method=\"POST\" action='http://localhost:4000/add_recipe' \n                            onSubmit={this.handleSubmit}\n                            >\n                                <h3>Ingredient</h3>\n            <input id=\"ingredient\" name=\"ingredient\" type=\"text\" value={this.state.ingredient} onChange={this.handleChangeIngredient} />\n            <br></br>\n            <h3>Amount</h3>\n            <input id=\"amount\" name=\"amount\" type=\"text\" value={this.state.amount} onChange={this.handleChangeAmount} />\n            <br></br>\n            <h3>Measurement Type:</h3>\n            <br></br>\n            <select id=\"types\" name=\"types\" value={this.state.value} onChange={this.handleChangeType} >\n            <option value=\"oz\">oz</option>\n            <option value=\"tsp\">tsp</option>\n            <option value=\"floz\">floz</option>\n            <option value=\"L\">L</option>\n            <option value=\"ml\">ml</option>\n            <option value=\"lb\">lb</option>\n            <option value=\"g\">g</option>\n            <option value=\"cup\">cup</option>\n            <option value=\"tbs\">tbs</option>\n            </select>\n            <br></br>\n            <br></br>\n            <input type='submit' value=\"Submit Ingredient\"/>\n          </form>\n            </div>\n\n        )\n\n    }\n}\n\nexport default AddIngredient;","import React from 'react';\nimport axios from 'axios';\n\n\nclass IngredientsList extends React.Component {\n\n    state = {\n        data: []\n    }\n\n    componentDidMount(){\n        axios.get('https://immense-basin-13550.herokuapp.com/')\n        .then(res => {\n      this.setState({\n        data: res.data\n      } )\n\n          })\n\n        }\n        \n\n\n    render() {\n     //   console.log(req.params.id)\n        console.log(this.state.data)\n        console.log(typeof this.state.data)\n        var ings = this.state.data;\n\n        console.log(Object.values(ings))\n        var romp = Object.values(ings)\n        var ings2 = romp.filter(function(e){\n            return e._id.Ingredient != ''\n         });\n         console.log(ings2)\n        var data =\n        romp.map((ins) => (\n<p>\n\n   <h3>ID: {ins._id}</h3>\n   <h3>Ingredient: {ins.Ingredient}</h3>\n   <h3>Amount: {ins.Amount}</h3>\n   <h3>Type: {ins.Type}</h3>\n   <h3>FLOZ: {ins.floz}</h3>\n   <h3>Cup: {ins.cup}</h3>\n   <h3>tbs: {ins.tbs}</h3>\n   <h3>tsp: {ins.tsp}</h3>\n   <h3>mL: {ins.ml}</h3>\n   <h3>L: {ins.L}</h3>\n\n</p>\n\n\n)) \n        return (\n            <p>\n            {data}</p>\n        )\n    }\n}\n    \n\n\nexport default IngredientsList;","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'\nimport { CardHeader, CardContent, Card, Button } from '@material-ui/core';\n\n\nclass RecipesList extends React.Component {\n\n    state = {\n        data: []\n    }\n\n    componentDidMount(){\n        axios.get('https://immense-basin-13550.herokuapp.com/recipes')\n        .then(res => {\n      this.setState({\n        data: res.data\n      } )\n\n          })\n\n        }\n        \n\n\n    render() {\n     //   console.log(req.params.id)\n        console.log(this.state.data)\n        console.log(this.props.match)\n        console.log(typeof this.state.data)\n        var ings = this.state.data\n        let none = 'You have no recipes';\n        console.log(Object.values(ings))\n        var romp = Object.values(ings)\n        var data =\n        romp.map((ins) => (\n            <p>\n                <Card>\n                    <CardHeader title={ins.Title} />\n               {/* <h3>ID: {ins._id}</h3> */}\n               <CardContent>\n               <Link to={`/recipe/${ins._id}`}><Button style= {{ textDecoration: 'none' }} variant='contained'>See more Details</Button></Link>\n               {/* <h3>Ingredients: {ins.Ingredients}</h3>\n               <h3>Directions: {ins.Directions}</h3> */}\n                              </CardContent>\n            </Card>\n            </p>\n            \n            \n            )) \n        return (\n            <p>\n            {data}</p>\n        )\n    }\n}\n    \n\n\nexport default RecipesList;","import React from 'react';\nimport { FormControl } from '@material-ui/core';\nimport { InputLabel } from '@material-ui/core';\nimport { Input } from '@material-ui/core';\nimport { FormHelperText } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\n\nclass AddRecipe extends React.Component {\n\n    state = {\n        title: '',\n        ingredients: '',\n        amounts: '',\n        types: '',\n        directions: ''\n    }\n\n    second = {\n        title: '',\n        ingredients: '',\n        amounts: '',\n        types: '',\n        directions: ''\n    }\n\n    handleChangeTitle = (event) => {\n        this.setState({\n            title: event.target.value}, function(){\n            console.log(this.state.title)\n        })\n\n\n    }\n\n    handleChangeIngredients = (event) => {\n        this.setState({\n            ingredients: event.target.value}, function(){\n                console.log(this.state.ingredients);\n        })\n    }\n\n    handleChangeAmounts = (event) => {\n        this.setState({\n            amounts: event.target.value}, function(){\n                console.log(this.state.amounts);\n        })\n    }\n\n    handleChangeType = (event) => {\n        this.setState({\n            types: event.target.value}, function(){\n                console.log(this.state.types);\n        })\n    }\n    handleChangeDirections = (event) => {\n        this.setState({\n            directions: event.target.value}, function(){\n                console.log(this.state.directions);\n        })\n    }\n\n\n\n    handleAddIngredient = (event) => {\n        this.second.ingredients += this.state.ingredients + ', '\n        console.log(this.second.title)\n        console.log(this.second.ingredients)\n        this.second.amounts += this.state.amounts + ', '\n        console.log(this.second.amounts)\n        this.second.types += this.state.types + ', '\n        console.log(this.second.types)\n        this.setState({\n            ingredients: '',\n            amounts: '',\n            types: '',\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        let post = {\n            title: this.state.title,\n            ingredients: this.second.ingredients,\n            amounts: this.second.amounts,\n            types: this.second.types,\n            directions: this.state.directions\n        }\n        console.log(post)\n        axios.post('https://immense-basin-13550.herokuapp.com/add_recipe', post)\n        let prevState = this.state\n        this.setState({\n            title: '',\n            ingredients: '',\n            amounts: '',\n            types: '',\n            directions: ''\n        })\n\n    }\n\n    render() {\n             \n\n        let ar = [this.second]\n        let data =                 <table>\n           { ar.map(obs => {\n               return(\n                <tr>\n                <td><b>Ingredients:</b><p>{obs.ingredients}</p></td>\n                <td><b>Amount</b><p>{obs.amounts}</p></td>\n                <td><b>Measurement Type</b><p>{obs.types}</p></td>\n               </tr> \n               )\n\n           })}\n\n    </table>\n\n        return (\n            <div>\n \n\n            <input id=\"title\" name=\"title\" type=\"text\" \n            value={this.state.title} \n            onChange={this.handleChangeTitle} />\n            <br></br>\n            <h3>Recipe</h3>\n                <p>{this.state.title}</p>\n                <h3>Ingredients and Measurement</h3>\n                    <p>{data}</p>\n                <h3>Directions</h3>\n                <p>{this.state.directions}</p>\n                            {/* <form\n                            // method=\"POST\" action='http://localhost:4000/add_recipe' \n                            onSubmit={this.handleSubmit}\n                            > */}\n\n            Ingredients:\n            <input id=\"ingredients\" name=\"ingredients\" type=\"text\" value={this.state.ingredients} onChange={this.handleChangeIngredients} />\n            <br></br>\n            Amount:\n            <input id=\"amounts\" name=\"amounts\" type=\"text\" value={this.state.amounts} onChange={this.handleChangeAmounts} />\n            <br></br>\n            Measurement Type:\n            <select id=\"types\" name=\"types\" value={this.state.value} onChange={this.handleChangeType} >\n            <option value=\"oz\">oz</option>\n            <option value=\"tsp\">tsp</option>\n            <option value=\"floz\">floz</option>\n            <option value=\"L\">L</option>\n            <option value=\"ml\">ml</option>\n            <option value=\"lb\">lb</option>\n            <option value=\"g\">g</option>\n            <option value=\"cup\">cup</option>\n            <option value=\"tbs\">tbs</option>\n            </select>\n            <br></br>\n            <button onClick={this.handleAddIngredient}>Add Ingredient</button>\n            <br></br>\n            Directions:\n            <input id=\"directions\" name=\"directions\" type=\"text\" \n            // value={this.state.directions} \n            onChange={this.handleChangeDirections} />\n            <br></br>\n            <button onClick={this.handleSubmit}>Sub</button>\n          {/* </form> */}\n            </div>\n\n        )\n\n    }\n}\n\nexport default AddRecipe;","import React, { useState, formData, setFormData } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect} from 'react-router';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport { PromiseProvider } from 'mongoose';\nimport { setAlert } from '../actions/alert';\nimport { register } from '../actions/auth';\nimport { login } from '../actions/auth';\n// let formData = new FormData(); \n\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    })\n\n\nconst { email, password } = formData;\n\nconst onChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n}\nconst onSubmit = async e => {\n    e.preventDefault();\n    login(email, password);\n}\n    \n// Redirect if logged in\n\nif(isAuthenticated){\n    return <Redirect to=\"/Home\" />\n}\n\nreturn (\n    <div>\n        <h1>Sign In</h1>\n        <form onSubmit={e => onSubmit(e)}>\n            <div>\n            <input type = 'text'\n            placeholder='Email'\n            name='email'\n            value={email}\n            onChange={e => onChange(e)}\n            minLength='6'\n            />\n            </div>\n            <div>\n            <input type = 'text'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={e => onChange(e)}\n            minLength='6'\n            />\n            </div>\n            <input type='submit' value='Login'\n            />\n        </form>\n        </div>\n)\n};\n\n// Login.propTypes = {\n//     Login: PropTypes.func.isRequired,\n//     isAuthenticated: PropTypes.bool\n// }\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\n\nexport default connect(mapStateToProps, \n    { login })(Login);","// import React, { useState, formData, setFormData } from 'react';\n// import axios from 'axios';\n// import { Link, Redirect} from 'react-router';\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types'\n// import { PromiseProvider } from 'mongoose';\n// import { setAlert } from '../actions/alert';\n// import { register } from '../actions/auth';\n// let formData = new FormData(); \n\nimport React, { useState, formData, setFormData } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect} from 'react-router';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport { PromiseProvider } from 'mongoose';\nimport { setAlert } from '../actions/alert';\nimport { register } from '../actions/auth';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    })\n\n\nconst { name, email, password, password2 } = formData;\n\nconst onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\nconst onSubmit = async e => {\n    e.preventDefault();\n    if(password !== password2){\n        setAlert('Passwords do not match', 'danger');\n    } else {\n        register({ name, email, password });\n    }\n}\n    \nif(isAuthenticated) {\n    return <Redirect to=\"/Home\" />\n}\n\nreturn (\n    <div>\n        <h1>Sign Up</h1>\n        <form onSubmit={e => onSubmit(e)}>\n            <div>\n            <input type = 'text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={e => onChange(e)}\n            minLength='6'\n            />\n            </div>\n            <div>\n            <input type = 'text'\n            placeholder='Email'\n            name='email'\n            value={email}\n            onChange={e => onChange(e)}\n            minLength='6'\n            />\n            </div>\n            <div>\n            <input type = 'text'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={e => onChange(e)}\n            minLength='6'\n            />\n            </div>\n            <div>\n            <input type = 'text'\n            placeholder='Confirm password'\n            name='password2'\n            value={password2}\n            onChange={e => onChange(e)}\n            minLength='6'\n            />\n            </div>\n            \n            <input type='submit' value='Register'\n            />\n        </form>\n</div>\n)\n};\n\n// Register.propTypes = {\n//     setAlert: PropTypes.func.isRequired,\n//     register: PropTypes.func.isRequired,\n//     isAuthenticated: PropTypes.bool\n// }\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, \n    { setAlert, register })(Register)","import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom'\nimport { CardHeader, CardContent, Card, Button } from '@material-ui/core';\n\nclass Recipe extends React.Component {\n\n    // console.log(grep)\n    state = {\n        data: []\n    }\n\n    handleUseRecipe = () => {\n\n        let strIngredients = this.state.data.Ingredients;\n        console.log(strIngredients)\n        let arIngredients = strIngredients.split(\", \");\n        let strAmounts = this.state.data.Amounts;\n        let arAmounts = strAmounts.split(\", \");\n        let strTypes = this.state.data.Types;\n        let arTypes = strTypes.split(\", \");\n        let negAmounts = arAmounts.map(amount => {\n            return amount*(-1)\n        })\n        console.log(arIngredients);\n        console.log(arAmounts);\n        console.log(arTypes);\n        console.log(typeof negAmounts)\n        let i;\n        let ing_add = [];\n        for(i = 0; i < arIngredients.length - 1; i++){\n            ing_add.push( {\n                Ingredient: arIngredients[i],\n                Type: arTypes[i],\n                Amount: negAmounts[i]\n            })\n        }\n        console.log(ing_add);\n        let j;\n        for(j = 0; j < ing_add.length; j++){\n            let dat = ing_add[j]\n            axios.post('https://immense-basin-13550.herokuapp.com/use_recipe', dat)\n            console.log(dat)\n            alert('Recipe ingredients have been subtracted from ingredient list')\n        }\n\n        \n\n        // For Each\n    }\n\n    componentDidMount(){\n        const id = this.props.match.params.id\n        axios.get(`https://immense-basin-13550.herokuapp.com/recipe/${id}`)\n        .then(res => {\n      this.setState({\n        data: res.data\n      } )\n      console.log(this.state.data)\n          })\n\n    }\nrender(){\n\n    let data =\n        <p>\n            <Card>\n                <CardHeader title={this.state.Title} />\n           {/* <h3>ID: {ins._id}</h3> */}\n           <CardContent>\n               <h3>Ingredients: {this.state.data.Ingredients}</h3>\n                <h3>Amounts: {this.state.data.Amounts}</h3>\n                <h3>Measurements: {this.state.data.Types}</h3>\n                <h3>Directions: {this.state.data.Directions}</h3>\n                 <Button \n      onClick={this.handleUseRecipe}\n      >Use Recipe</Button>\n                          </CardContent>\n        </Card>\n        </p>;\n    \n    console.log(this.state.data)\n    console.log(this.state.data.Amounts)\n    console.log(this.state.data.Ingredients)\n    console.log(this.state.data.Types)\nreturn (\n    <div>\n      <span>{data}</span>\n\n    </div>\n   \n)\n}\n    }\n\nexport default Recipe;","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { CardHeader, CardContent, Card, Button } from '@material-ui/core';\n\n\nclass SumIngredients extends React.Component {\n\n    state = {\n        data: []\n    }\n\n    componentDidMount(){\n        axios.get('https://immense-basin-13550.herokuapp.com/sum')\n        .then(res => {\n      this.setState({\n        data: res.data\n      } )\n\n          })\n\n        }\n        \n\n\n    render() {\n     //   console.log(req.params.id)\n        console.log(this.state.data)\n        console.log(typeof this.state.data)\n        var ings = this.state.data\n        console.log(Object.values(ings))\n        // var vol = ings.map(filter)\n\n        let hi = Object.values(this.state.data);\n        console.log(hi)\n// console.log(hi)\nlet result = [];\nlet fin = hi.reduce(function(res, value){\n  if (! res[value.Ingredient]){\n    res[value.Ingredient] = {Ingredient: value.Ingredient, floz: 0, tsp: 0,\n    tbs: 0, L: 0, ml: 0, cup: 0, oz: 0, lb: 0, g: 0 };\n    result.push(res[value.Ingredient])\n  }\n  res[value.Ingredient].floz += value.floz;\n  res[value.Ingredient].tsp += value.tsp;\n  res[value.Ingredient].tbs += value.tbs;\n  res[value.Ingredient].L += value.L;\n  res[value.Ingredient].ml += value.ml;\n  res[value.Ingredient].cup += value.cup;\n  res[value.Ingredient].oz += value.oz;\n  res[value.Ingredient].lb += value.lb;\n  res[value.Ingredient].g += value.g\n  return res;\n}, {});\n\nconsole.log(fin)\n        var romp = Object.values(fin);\n        let i;\n        let vol = [];\n        let weight = [];\n        for(i=0; i< romp.length; i++){\n            if(romp.floz === 0 && romp.tsp === 0 && romp.tbs === 0 && romp.L === 0 && romp.ml === 0 && romp.cup === 0){\n                weight.push(romp[i])\n            } else {\n                vol.push(romp[i])\n            }\n        }\n        console.log(vol)\n        console.log(weight)\n        console.log(vol)\n        console.log(weight)\n        console.log(romp);\n        let n;\n        let j;\n        for(n=0; n < romp.length; n++){\n            if(romp[n].j === 0 || romp[n].j === 'NaN'){\n                romp[n].j = 'N/A'\n            }\n        }\n        console.log(romp)\n        \n\n        // console.log(func(vol))\n        let data2 = romp.map(ing => (\n            <Card>\n                <h3><CardHeader title={ing.Ingredient} /></h3>\n                <CardContent>\n            <p>\n            <h3>tbs: {ing.tbs}</h3>\n            <h3>tsp: {ing.tsp}</h3>\n            <h3>floz: {ing.floz}</h3>\n            <h3>cup: {ing.cup}</h3>\n            <h3>mL: {ing.ml}</h3>\n            <h3>L: {ing.L}</h3>\n            <h3>oz: {ing.oz}</h3>\n            <h3>lb: {ing.lb}</h3>\n            <h3>g: {ing.g}</h3>\n            </p>\n            </CardContent>\n            </Card>\n        ))\n            \n        return (\n            \n <p>{data2}</p>\n\n    \n        )\n}\n}\n\nexport default SumIngredients;","/* \n    Write code for React Router here\nImport the Home and About components from \nthe component folder. Assign the default\npath \"/\" to the Home component and \"/about\"\nto the About component.\n\nRemember to export the component at the end\n*/\nimport Home from './components/Home';\nimport React from 'react';\nimport Navigation from './components/Navigation';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport AddIngredient from './components/add_ingredient';\nimport IngredientsList from './components/ingredients_list';\nimport RecipesList from './components/recipes_list';\nimport AddRecipe from './components/add_recipe';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Recipe from './components/Recipe';\nimport SumIngredients from './components/sum_ingredients';\n// Write component imports here //\n\n\n\n// Start Router function here //\nfunction Router (){\n    return (\n        <BrowserRouter>\n        <Navigation />\n                            <Switch>\n                <Route exact path=\"/\" component = {Home} />\n                <Route exact path=\"/add_ingredients\" component = {AddIngredient} />\n                <Route exact path=\"/ingredients_list\" component = {IngredientsList} /> \n                <Route exact path=\"/recipes_list\" component = {RecipesList} />   \n                <Route exact path=\"/add_recipe\" component = {AddRecipe} /> \n                <Route exact path=\"/login\" component = {Login} />  \n                <Route exact path=\"/register\" component = {Register} /> \n                <Route path=\"/recipe/:id\" component = {Recipe} />    \n                <Route path=\"/sum\" component = {SumIngredients} />       \n        </Switch>\n        </BrowserRouter>\n\n      \n    )\n}\n\nexport default Router;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) => {\nalerts !== null && \nalerts.length > 0 && \nalerts.map(alert => (\n    <div key={alert.id}>\n        { alert.msg }\n    </div>\n));\n}\nAlert.PropTypes = {\n    alerts: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n    alerts: state.alert\n})\n\nexport default connect(mapStateToProps)(Alert);","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [\n    {\n        id: 1,\n        msg: 'Please log in',\n        alertType: 'success'\n}];\n\nexport default function(state = initialState, action){\n    const { type, payload } = action;\n\n    switch(type){\n        case SET_ALERT:\n            return [...state, action.payload]\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n        }\n}","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n}   from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    \n    \n    switch(type){\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            }\n            case REGISTER_FAIL:\n            case AUTH_ERROR:\n            case LOGIN_FAIL:\n            case LOGOUT:\n                localStorage.removeItem('token');\n                return {\n                    ...state,\n                    token: null,\n                    isAuthenticated: false,\n                    loading: false\n                }\n            default:\n                return state\n    }\n}","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nexport default combineReducers({\n    alert,\n    auth\n})","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, initialState, \n    composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import React, { Fragment, useEffect } from 'react';\n// import AddRefill from './components/add_refill';\nimport Router from './Router';\n// import Register from './components/register'\n// import LoggedIn from './components/LoggedIn';\n// Redux\nimport Alert from './components/layout/alert';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth'\nimport setAuthToken from './utils/setAuthToken'\n\nif(localStorage.token) {\n  setAuthToken(localStorage.token)\n}\n\n\nfunction App() {\n  useEffect(() => {\n    store.dispatch(loadUser())\n  }, [])\n\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      <Router />\n    </div>\n    </Provider>\n\n  );\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}